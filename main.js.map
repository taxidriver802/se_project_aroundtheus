{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Around the US/./src/components/Card.js","webpack://Around the US/./src/utils/constants.js","webpack://Around the US/./src/components/FormValidator.js","webpack://Around the US/./src/components/Popup.js","webpack://Around the US/./src/components/PopupWithForm.js","webpack://Around the US/./src/pages/index.js","webpack://Around the US/./src/components/Section.js","webpack://Around the US/./src/components/PopupWithImage.js","webpack://Around the US/./src/components/UserInfo.js","webpack://Around the US/./src/components/Api.js"],"sourcesContent":["export default class Card {\r\n  constructor(\r\n    cardsData,\r\n    cardSelector,\r\n    handleImageClick,\r\n    domElements,\r\n    handleDeleteCallback,\r\n    handleLikeCallback\r\n  ) {\r\n    this._name = cardsData.name;\r\n    this._link = cardsData.link;\r\n    this._id = cardsData._id;\r\n    this.isLiked = cardsData.isLiked;\r\n    this._cardSelector = cardSelector;\r\n    this._handleImageClick = handleImageClick;\r\n    this.domElements = domElements;\r\n\r\n    this._handleDeleteCallback = handleDeleteCallback.bind(this);\r\n    this._handleLikeCallback = handleLikeCallback.bind(this);\r\n  }\r\n\r\n  getView() {\r\n    // Get the template element based on the selector\r\n    const templateElement = document.querySelector(this._cardSelector);\r\n\r\n    // Clone the content of the template\r\n    this._cardElement = templateElement.content\r\n      .querySelector(\".card\")\r\n      .cloneNode(true);\r\n\r\n    // Populate the card data\r\n    this._cardImageElement = this._cardElement.querySelector(\".card__image\");\r\n    this._cardTitleEl = this._cardElement.querySelector(\".card__title\");\r\n    this._cardImageElement.src = this._link;\r\n    this._cardImageElement.alt = this._name;\r\n    this._cardTitleEl.textContent = this._name;\r\n\r\n    this._isLiked();\r\n\r\n    // Set event listeners\r\n\r\n    this._setEventListeners();\r\n\r\n    // Return the card element\r\n\r\n    return this._cardElement;\r\n  }\r\n\r\n  _isLiked() {\r\n    this._likeButton = this._cardElement.querySelector(\".card__like-button\");\r\n    if (this.isLiked) {\r\n      this._likeButton.classList.add(\"card__like-button_active\");\r\n    }\r\n  }\r\n\r\n  _setEventListeners() {\r\n    // .card__like-button\r\n    this._cardElement\r\n      .querySelector(\".card__like-button\")\r\n      .addEventListener(\"click\", () => {\r\n        this._handleLikeCallback(this._id, this._cardElement);\r\n      });\r\n\r\n    // .card__delete-button\r\n\r\n    this._cardElement\r\n      .querySelector(\".card__delete-button\")\r\n      .addEventListener(\"click\", () => {\r\n        this._handleDeleteCallback(this._id, this._cardElement);\r\n      });\r\n\r\n    // handle image click\r\n\r\n    this._cardImageElement.addEventListener(\"click\", () => {\r\n      this._handleImageClick({ name: this._name, link: this._link });\r\n    });\r\n  }\r\n}\r\n","// Selectors \\\\\r\n\r\nconst config = {\r\n  formSelector: \".modal__form\",\r\n  inputSelector: \".modal__input\",\r\n  submitButtonSelector: \".modal__submit\",\r\n  inactiveButtonClass: \"modal__submit_disabled\",\r\n  inputErrorClass: \"modal__input_type_error\",\r\n  errorClass: \"modal__error_visible\",\r\n};\r\n\r\nconst selectors = {\r\n  cardSection: \".cards__list\",\r\n  cardTemplate: \".card-template\",\r\n};\r\n\r\n// DomElements \\\\\r\n\r\nconst profileImage = document.querySelector(\".profile__image\");\r\nconst profileImageEditModal = document.querySelector(\r\n  \"#profile-image-edit-modal\"\r\n);\r\nconst profileImageEditButton = document.querySelector(\r\n  \"#profileImageEditButton\"\r\n);\r\n\r\nconst profileImageEditForm = document.querySelector(\"#profile-image-edit-form\");\r\nconst profileimageEditInput = profileImageEditForm.querySelector(\r\n  \"#profile-image-edit-input\"\r\n);\r\nconst profileAddEditButton = document.querySelector(\"#profile-edit-button\");\r\nconst profileEditModal = document.querySelector(\"#profile-edit-modal\");\r\nconst profileCloseModalButton = document.querySelector(\r\n  \"#profile-close-modal-button\"\r\n);\r\nconst addCardForm = document.querySelector(\"#add-card-form\");\r\n\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileTitleInput = document.querySelector(\"#profile-title-input\");\r\nconst profileDescriptionInput = document.querySelector(\r\n  \"#profile-description-input\"\r\n);\r\nconst profileEditForm = profileEditModal.querySelector(\".modal__form\");\r\n\r\nconst cardDeleteConfirmButton = document.querySelector(\r\n  \"#modal-card-delete-button\"\r\n);\r\n\r\nconst deleteCardConfirmation = document.querySelector(\r\n  \"#delete-card-confirmation\"\r\n);\r\n\r\nconst modalDeleteCardConfirmation = deleteCardConfirmation.querySelector(\r\n  \"#modal-card-delete-button\"\r\n);\r\n\r\nconst deleteImageButton = document.querySelector(\".card__delete-button-api\");\r\n\r\nconst deleteButton = document.querySelector(\".card__delete-button-api\");\r\nconst addNewCardButton = document.querySelector(\".profile__add-button\");\r\nconst cardAddModal = document.querySelector(\"#card-add-modal\");\r\nconst addCardFormElement = cardAddModal.querySelector(\".modal__form\");\r\nconst popupImageModal = document.querySelector(\"#popup-image\");\r\n\r\nconst modalImageElement = document.querySelector(\".modal__image\");\r\nconst popupImageCaption = document.querySelector(\".modal__caption\");\r\nconst cardTitleInput = addCardFormElement.querySelector(\r\n  \".modal__input_type_title\"\r\n);\r\nconst cardLinkInput = addCardFormElement.querySelector(\r\n  \".modal__input_type_link\"\r\n);\r\n\r\nconst domElements = {\r\n  profileimageEditInput,\r\n  profileImageEditForm,\r\n  profileImageEditButton,\r\n  profileImageEditModal,\r\n  profileImage,\r\n  deleteImageButton,\r\n  modalDeleteCardConfirmation,\r\n  deleteCardConfirmation,\r\n  profileAddEditButton,\r\n  profileEditModal,\r\n  profileCloseModalButton,\r\n  profileTitle,\r\n  profileDescription,\r\n  profileTitleInput,\r\n  profileDescriptionInput,\r\n  profileEditForm,\r\n  addNewCardButton,\r\n  cardAddModal,\r\n  addCardFormElement,\r\n  popupImageModal,\r\n  modalImageElement,\r\n  popupImageCaption,\r\n  addCardForm,\r\n  cardTitleInput,\r\n  cardLinkInput,\r\n  cardDeleteConfirmButton,\r\n  deleteButton,\r\n};\r\n\r\nconst infoSelector = {\r\n  profileTitle: domElements.profileTitle,\r\n  profileDescription: domElements.profileDescription,\r\n  profileTitleInput: domElements.profileTitleInput,\r\n  profileDescriptionInput: domElements.profileDescriptionInput,\r\n};\r\n\r\nwindow.domElements = domElements;\r\n\r\n// Exports \\\\\r\n\r\nexport default {\r\n  config,\r\n  selectors,\r\n  domElements,\r\n  infoSelector,\r\n};\r\n","export default class FormValidator {\r\n  constructor(config, formElement) {\r\n    this._inputSelector = config.inputSelector;\r\n    this._submitButtonSelector = config.submitButtonSelector;\r\n    this._inactiveButtonClass = config.inactiveButtonClass;\r\n    this._inputErrorClass = config.inputErrorClass;\r\n    this._errorClass = config.errorClass;\r\n\r\n    this._formElement = formElement;\r\n  }\r\n\r\n  _showInputError(inputElement) {\r\n    const errorMessageEl = this._formElement.querySelector(\r\n      `#${inputElement.id}-error`\r\n    );\r\n    inputElement.classList.add(this._inputErrorClass);\r\n    errorMessageEl.textContent = inputElement.validationMessage;\r\n    errorMessageEl.classList.add(this._errorClass);\r\n  }\r\n\r\n  _hideInputError(inputElement) {\r\n    const errorMessageEl = this._formElement.querySelector(\r\n      `#${inputElement.id}-error`\r\n    );\r\n    inputElement.classList.remove(this._inputErrorClass);\r\n    errorMessageEl.classList.remove(this._errorClass);\r\n    errorMessageEl.textContent = \"\";\r\n  }\r\n\r\n  _checkInputValidity(inputElement) {\r\n    if (!inputElement.validity.valid) {\r\n      this._showInputError(inputElement);\r\n    } else {\r\n      this._hideInputError(inputElement);\r\n    }\r\n  }\r\n\r\n  _toggleButtonState(inputList) {\r\n    const submitButton = this._formElement.querySelector(\r\n      this._submitButtonSelector\r\n    );\r\n\r\n    if (this._hasInvalidInput(inputList)) {\r\n      this.disableButton();\r\n    } else {\r\n      submitButton.classList.remove(this._inactiveButtonClass);\r\n      submitButton.disabled = false;\r\n    }\r\n  }\r\n\r\n  _hasInvalidInput(inputList) {\r\n    return !inputList.every((inputElement) => inputElement.validity.valid);\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._inputEls = [\r\n      ...this._formElement.querySelectorAll(this._inputSelector),\r\n    ];\r\n\r\n    this._inputEls.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", () => {\r\n        this._checkInputValidity(inputElement);\r\n        this._toggleButtonState(this._inputEls);\r\n      });\r\n    });\r\n  }\r\n\r\n  disableButton() {\r\n    const submitButton = this._formElement.querySelector(\r\n      this._submitButtonSelector\r\n    );\r\n    this._formElement.addEventListener(\"submit\", () => {\r\n      submitButton.classList.add(this._inactiveButtonClass);\r\n      submitButton.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableValidation() {\r\n    this._formElement.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n\r\n    this._setEventListeners();\r\n  }\r\n\r\n  resetValidation() {\r\n    this._inputEls.forEach((inputElement) => {\r\n      this._hideInputError(inputElement); // Clear all error messages\r\n      inputElement.value = \"\"; // Clear input fields\r\n    });\r\n\r\n    // Reset button state\r\n    this.disableButton();\r\n  }\r\n}\r\n","export default class Popup {\r\n  constructor({ popupSelector }) {\r\n    this.popupElement = document.querySelector(popupSelector);\r\n    this._handleEscClose = this._handleEscClose.bind(this);\r\n    this._handleOverlayClick = this._handleOverlayClick.bind(this);\r\n    this._handleCloseClick = () => this.close();\r\n  }\r\n\r\n  setEventListeners() {\r\n    this.popupElement\r\n      .querySelector(\".modal__close\")\r\n      .addEventListener(\"click\", this._handleCloseClick);\r\n  }\r\n\r\n  open() {\r\n    this.popupElement.classList.add(\"modal_opened\");\r\n\r\n    document.addEventListener(\"keydown\", this._handleEscClose);\r\n    document.addEventListener(\"click\", this._handleOverlayClick);\r\n  }\r\n\r\n  close() {\r\n    this.popupElement.classList.remove(\"modal_opened\");\r\n\r\n    document.removeEventListener(\"keydown\", this._handleEscClose);\r\n    document.removeEventListener(\"click\", this._handleOverlayClick);\r\n  }\r\n\r\n  _handleEscClose(e) {\r\n    if (e.key === \"Escape\") {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  _handleOverlayClick(e) {\r\n    if (e.target.classList.contains(\"modal_opened\")) {\r\n      this.close();\r\n    }\r\n  }\r\n}\r\n","import Popup from \"./Popup.js\";\r\n\r\nexport default class PopupWithForm extends Popup {\r\n  constructor({ popupSelector }, handleFormSubmit) {\r\n    super({ popupSelector });\r\n    this._handleFormSubmit = handleFormSubmit;\r\n\r\n    this._form = this.popupElement.querySelector(\".modal__form\");\r\n\r\n    this._getInputValues = this._getInputValues.bind(this);\r\n  }\r\n\r\n  _getInputValues() {\r\n    const inputList = Array.from(\r\n      this.popupElement.querySelectorAll(\".modal__input\")\r\n    );\r\n\r\n    const data = {};\r\n    inputList.forEach((input) => {\r\n      data[input.name] = input.value;\r\n    });\r\n\r\n    return data;\r\n  }\r\n}\r\n","import Card from \"../components/Card.js\";\r\nimport constants from \"../utils/constants.js\";\r\nimport FormValidator from \"../components/FormValidator.js\";\r\nimport UserInfo from \"../components/UserInfo.js\";\r\nimport Section from \"../components/Section.js\";\r\nimport PopupWithImage from \"../components/PopupWithImage.js\";\r\nimport PopupWithForm from \"../components/PopupWithForm.js\";\r\nimport Api from \"../components/Api.js\";\r\nimport \"./index.css\";\r\n\r\nconst { domElements, selectors, config } = constants;\r\n\r\n/*-----------------------------------------------------------------*/\r\n/*                          Instances                              */\r\n/*-----------------------------------------------------------------*/\r\n\r\nconst cardSection = new Section(\r\n  {\r\n    items: [],\r\n    renderer: (item) => {\r\n      const cardEl = generateCard(item);\r\n      cardSection.addItem(cardEl);\r\n    },\r\n  },\r\n  selectors.cardSection,\r\n  domElements,\r\n  generateCard\r\n);\r\n\r\nconst addFormValidator = new FormValidator(\r\n  config,\r\n  domElements.addCardFormElement\r\n);\r\n\r\nconst editFormValidator = new FormValidator(\r\n  config,\r\n  domElements.profileEditForm\r\n);\r\n\r\nconst deleteCardPopup = new PopupWithForm({\r\n  popupSelector: \"#delete-card-confirmation\",\r\n});\r\n\r\nconst imagePopup = new PopupWithImage(\r\n  { popupSelector: \"#popup-image\" },\r\n  domElements\r\n);\r\n\r\nconst newCardPopup = new PopupWithForm(\r\n  {\r\n    popupSelector: \"#card-add-modal\",\r\n  },\r\n  handleAddCardSubmit,\r\n  domElements,\r\n  config\r\n);\r\n\r\nconst editProfilePopup = new PopupWithForm(\r\n  {\r\n    popupSelector: \"#profile-edit-modal\",\r\n  },\r\n  ({ name, description }) => {\r\n    userInfo.setUserInfo(name, description);\r\n    editProfilePopup.close();\r\n  },\r\n  domElements,\r\n  config\r\n);\r\n\r\nconst userInfo = new UserInfo(\r\n  \".profile__title\",\r\n  \".profile__description\",\r\n  domElements,\r\n  () => handleProfImgWorkflow()\r\n);\r\n\r\nuserInfo.setEventListener();\r\n/*-----------------------------------------------------------------*/\r\naddFormValidator.enableValidation();\r\n\r\neditFormValidator.enableValidation();\r\n\r\nconst handleImageClick = ({ name, link }) => {\r\n  imagePopup.open({ name, link });\r\n};\r\n\r\n/*---------------------------------------------------------------------*/\r\n/*                           Event Handler                             */\r\n/*---------------------------------------------------------------------*/\r\n\r\nexport function generateCard(cardsData) {\r\n  const card = new Card(\r\n    cardsData,\r\n    \"#card-template\",\r\n    handleImageClick,\r\n    domElements,\r\n    () => handleDeleteWorkflow(cardsData._id, card._cardElement),\r\n    () => handleLikeWorkflow(cardsData._id, card._cardElement)\r\n  );\r\n\r\n  return card.getView();\r\n}\r\n\r\nfunction handleProfImgWorkflow() {\r\n  domElements.profileImageEditForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const avatarUrl = domElements.profileimageEditInput.value;\r\n    api\r\n      .updateApiUserAvatar(avatarUrl)\r\n      .then((data) => {\r\n        domElements.profileImage.src = avatarUrl;\r\n        domElements.profileImageEditModal.classList.remove(\"modal_opened\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error updating profile image:\", err);\r\n      });\r\n  });\r\n}\r\n\r\nfunction handleLikeWorkflow(_id, cardElement) {\r\n  api.toggleLike(_id, cardElement);\r\n}\r\n\r\nfunction handleDeleteWorkflow(_id, cardElement) {\r\n  deleteCardPopup.open(); // Open delete confirmation popup\r\n\r\n  // Wait for the user to confirm the delete action\r\n  domElements.cardDeleteConfirmButton.addEventListener(\r\n    \"click\",\r\n    () => {\r\n      handleDeleteCard(_id, cardElement); // Execute the delete logic\r\n      deleteCardPopup.close(); // Close the popup\r\n    },\r\n    { once: true } // Ensure the event listener is only triggered once\r\n  );\r\n}\r\n\r\nfunction handleAddCardSubmit({ name, link }) {\r\n  const newCardInfo = {\r\n    name: name,\r\n    link: link,\r\n  };\r\n\r\n  const cardElement = generateCard(newCardInfo);\r\n  cardSection.addItem(cardElement);\r\n\r\n  newCardPopup.close();\r\n\r\n  setTimeout(() => {\r\n    domElements.addCardFormElement.reset();\r\n  }, 1);\r\n}\r\n\r\n/*---------------------------------------------------------------------*/\r\n/*                          Event Listeners                            */\r\n/*---------------------------------------------------------------------*/\r\n\r\n/* add profile edit button */\r\n\r\ndomElements.profileAddEditButton.addEventListener(\"click\", () => {\r\n  const userData = userInfo.getUserInfo();\r\n\r\n  domElements.profileTitleInput.value = userData.title;\r\n  domElements.profileDescriptionInput.value = userData.description;\r\n\r\n  editProfilePopup.open();\r\n});\r\n\r\n/* add new card button */\r\n\r\ndomElements.addNewCardButton.addEventListener(\"click\", () => {\r\n  newCardPopup.open();\r\n});\r\n\r\n/* domElements.profileImage.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  domElements.profileImageEditModal.classList.add(\"modal_opened\");\r\n}) */\r\n/* domElements.profileImageEditForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  api\r\n    .updateApiUserAvatar()\r\n    .then((data) => {\r\n      console.log(\"Avatar updated\", data);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error updating profile image:\", err);\r\n    });\r\n  domElements.profileImageEditModal.classList.remove(\"modal_opened\");\r\n}); */\r\n\r\n/* SETEVENTLISTENERS */\r\n\r\nnewCardPopup.setEventListeners();\r\neditProfilePopup.setEventListeners();\r\nimagePopup.setEventListeners();\r\ndeleteCardPopup.setEventListeners();\r\n\r\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\r\n\r\nconst api = new Api(\r\n  {\r\n    baseUrl: \"https://around-api.en.tripleten-services.com/v1\",\r\n    headers: {\r\n      authorization: \"7475a3c0-00b4-4b01-93e9-2c093b2534fb\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  },\r\n  domElements\r\n);\r\n///\r\n\r\napi\r\n  .getApiUserInfo()\r\n  .then((user) => {\r\n    // Update the page with the user information\r\n    document.querySelector(\".profile__title\").textContent = user.name;\r\n    document.querySelector(\".profile__description\").textContent = user.about;\r\n    document.querySelector(\".profile__image\").src = user.avatar;\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Failed to load user info:\", err);\r\n  });\r\n///\r\n\r\napi\r\n  .getApiInitialCards()\r\n  .then((result) => {\r\n    cardSection.renderItems(result);\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Error Found:\", err);\r\n  });\r\n\r\nfunction handleDeleteCard(cardId, cardElement) {\r\n  api\r\n    .deleteCard(cardId)\r\n    .then(() => {\r\n      cardElement.remove();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error deleting card:\", err);\r\n    });\r\n}\r\n\r\ndomElements.profileEditForm.addEventListener(\"submit\", (event) => {\r\n  const updatedData = {\r\n    name: domElements.profileTitleInput.value,\r\n    about: domElements.profileDescriptionInput.value,\r\n  };\r\n\r\n  // Call the updateProfile API method\r\n  api\r\n    .addApiUserInfo(updatedData)\r\n    .then((updatedUser) => {\r\n      // Update the profile on the page with the new data\r\n      document.querySelector(\".profile__title\").textContent = updatedUser.name;\r\n      document.querySelector(\".profile__description\").textContent =\r\n        updatedUser.about;\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error updating profile:\", err);\r\n    });\r\n\r\n  editProfilePopup.close();\r\n});\r\n\r\n/* api\r\n  .updateApiUserAvatar()\r\n  .then((data) => {\r\n    console.log(\"Avatar updated\", data);\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Error updating profile image:\", err);\r\n  }); */\r\n\r\ndomElements.addCardForm.addEventListener(\"submit\", (event) => {\r\n  /* event.preventDefault(); */ // Prevent default form submission\r\n\r\n  const newCardData = {\r\n    name: domElements.cardTitleInput.value,\r\n    link: domElements.cardLinkInput.value,\r\n  };\r\n\r\n  // Call the API method to add a new card\r\n  api\r\n    .addApiNewCard(newCardData)\r\n    .then((newCard) => {\r\n      // Add the new card to the page\r\n      handleAddCardSubmit(newCard); // Replace with your card rendering logic\r\n\r\n      // Reset the form\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error adding new card:\", err);\r\n    });\r\n  newCardPopup.close();\r\n});\r\n","export default class Section {\r\n  constructor({ items, renderer }, selector, domElements, generateCard) {\r\n    this._items = items; // Array of data items\r\n    this._renderer = renderer; // Function to render a single item\r\n    this._container = document.querySelector(selector); // Container for cards\r\n    this.domElements = domElements;\r\n    this.generateCard = generateCard;\r\n  }\r\n\r\n  // Method to render all items on initial load\r\n  renderItems(items) {\r\n    items.forEach((item) => {\r\n      this._renderer(item);\r\n    });\r\n  }\r\n\r\n  // Method to add a single item to the container\r\n  addItem(element) {\r\n    this._container.append(element);\r\n  }\r\n}\r\n","import Popup from \"./Popup.js\";\r\n\r\nexport default class PopupWithImage extends Popup {\r\n  constructor({ popupSelector }, domElements) {\r\n    super({ popupSelector });\r\n\r\n    this._domElements = domElements;\r\n  }\r\n\r\n  open({ name, link }) {\r\n    const imageElement = this._domElements.modalImageElement;\r\n    const captionElement = this._domElements.popupImageCaption;\r\n\r\n    imageElement.src = link;\r\n    imageElement.alt = name;\r\n    captionElement.textContent = name;\r\n\r\n    super.open();\r\n  }\r\n}\r\n","export default class UserInfo {\r\n  constructor(nameSelector, jobSelector, domElements, handleProfImgWorkflow) {\r\n    this._nameElement = document.querySelector(nameSelector);\r\n    this._jobElement = document.querySelector(jobSelector);\r\n\r\n    this.domElements = domElements;\r\n\r\n    this._handleProfImgWorkflow = handleProfImgWorkflow.bind(this);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return {\r\n      title: this._nameElement.textContent,\r\n      description: this._jobElement.textContent,\r\n    };\r\n  }\r\n\r\n  setUserInfo(name, description) {\r\n    this._nameElement.textContent = name;\r\n    this._jobElement.textContent = description;\r\n  }\r\n\r\n  setEventListener() {\r\n    this.domElements.profileImage.addEventListener(\"click\", () => {\r\n      domElements.profileImageEditModal.classList.add(\"modal_opened\");\r\n      this._handleProfImgWorkflow();\r\n    });\r\n  }\r\n}\r\n","export default class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this.baseUrl = baseUrl;\r\n    this.headers = headers;\r\n\r\n    this._handleResponse = this._handleResponse.bind(this);\r\n  }\r\n\r\n  getApiInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: this.headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getApiUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this.headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addApiNewCard(data) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addApiUserInfo(data) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  updateApiUserAvatar(avatarUrl) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarUrl,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  toggleLike(cardId, cardElement) {\r\n    const likeButton = cardElement\r\n      .querySelector(\".card__description\")\r\n      .querySelector(\".card__like-button\");\r\n\r\n    const isLiked = likeButton.classList.contains(\"card__like-button_active\");\r\n    const method = isLiked ? \"DELETE\" : \"PUT\";\r\n\r\n    if (isLiked) {\r\n      likeButton.classList.remove(\"card__like-button_active\");\r\n    } else {\r\n      likeButton.classList.add(\"card__like-button_active\");\r\n    }\r\n\r\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\r\n      method,\r\n      headers: this.headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (res.ok) return res.json();\r\n    return Promise.reject(`Error: ${res.status}`);\r\n  }\r\n}\r\n"],"names":["Card","constructor","cardsData","cardSelector","handleImageClick","domElements","handleDeleteCallback","handleLikeCallback","this","_name","name","_link","link","_id","isLiked","_cardSelector","_handleImageClick","_handleDeleteCallback","bind","_handleLikeCallback","getView","templateElement","document","querySelector","_cardElement","content","cloneNode","_cardImageElement","_cardTitleEl","src","alt","textContent","_isLiked","_setEventListeners","_likeButton","classList","add","addEventListener","profileImage","profileImageEditModal","profileImageEditButton","profileImageEditForm","profileimageEditInput","profileAddEditButton","profileEditModal","profileCloseModalButton","addCardForm","profileTitle","profileDescription","profileTitleInput","profileDescriptionInput","profileEditForm","cardDeleteConfirmButton","deleteCardConfirmation","modalDeleteCardConfirmation","deleteImageButton","deleteButton","addNewCardButton","cardAddModal","addCardFormElement","popupImageModal","modalImageElement","popupImageCaption","cardTitleInput","cardLinkInput","infoSelector","window","config","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","selectors","cardSection","cardTemplate","FormValidator","formElement","_inputSelector","_submitButtonSelector","_inactiveButtonClass","_inputErrorClass","_errorClass","_formElement","_showInputError","inputElement","errorMessageEl","id","validationMessage","_hideInputError","remove","_checkInputValidity","validity","valid","_toggleButtonState","inputList","submitButton","_hasInvalidInput","disableButton","disabled","every","_inputEls","querySelectorAll","forEach","enableValidation","e","preventDefault","resetValidation","value","Popup","_ref","popupSelector","popupElement","_handleEscClose","_handleOverlayClick","_handleCloseClick","close","setEventListeners","open","removeEventListener","key","target","contains","PopupWithForm","handleFormSubmit","super","_handleFormSubmit","_form","_getInputValues","Array","from","data","input","constants","selector","generateCard","items","renderer","_items","_renderer","_container","renderItems","item","addItem","element","append","cardEl","addFormValidator","editFormValidator","deleteCardPopup","imagePopup","_domElements","_ref2","imageElement","captionElement","newCardPopup","handleAddCardSubmit","editProfilePopup","description","userInfo","setUserInfo","nameSelector","jobSelector","handleProfImgWorkflow","_nameElement","_jobElement","_handleProfImgWorkflow","getUserInfo","title","setEventListener","avatarUrl","api","updateApiUserAvatar","then","catch","err","console","error","card","handleDeleteWorkflow","cardElement","cardId","deleteCard","handleDeleteCard","once","handleLikeWorkflow","toggleLike","_ref3","setTimeout","reset","userData","baseUrl","headers","_handleResponse","getApiInitialCards","fetch","method","getApiUserInfo","addApiNewCard","body","JSON","stringify","addApiUserInfo","avatar","_checkResponse","likeButton","res","ok","json","Promise","reject","status","authorization","user","about","result","event","updatedData","updatedUser","newCardData","newCard"],"sourceRoot":""}