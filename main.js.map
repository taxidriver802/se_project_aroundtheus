{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Around the US/./src/components/Card.js","webpack://Around the US/./src/utils/constants.js","webpack://Around the US/./src/components/FormValidator.js","webpack://Around the US/./src/components/Popup.js","webpack://Around the US/./src/components/PopupWithForm.js","webpack://Around the US/./src/pages/index.js","webpack://Around the US/./src/components/Section.js","webpack://Around the US/./src/components/PopupWithImage.js","webpack://Around the US/./src/components/UserInfo.js","webpack://Around the US/./src/components/Api.js"],"sourcesContent":["export default class Card {\r\n  constructor({ name, link }, cardSelector, handleImageClick, domElements) {\r\n    this._name = name;\r\n    this._link = link;\r\n    this._cardSelector = cardSelector;\r\n    this._handleImageClick = handleImageClick;\r\n    this.domElements = domElements;\r\n  }\r\n\r\n  getView() {\r\n    // Get the template element based on the selector\r\n    const templateElement = document.querySelector(this._cardSelector);\r\n\r\n    // Clone the content of the template\r\n    this._cardElement = templateElement.content\r\n      .querySelector(\".card\")\r\n      .cloneNode(true);\r\n\r\n    // Populate the card data\r\n    this._cardImageElement = this._cardElement.querySelector(\".card__image\");\r\n    this._cardTitleEl = this._cardElement.querySelector(\".card__title\");\r\n    this._cardImageElement.src = this._link;\r\n    this._cardImageElement.alt = this._name;\r\n    this._cardTitleEl.textContent = this._name;\r\n\r\n    // Set event listeners\r\n\r\n    this._setEventListeners();\r\n\r\n    // Return the card element\r\n\r\n    return this._cardElement;\r\n  }\r\n\r\n  _setEventListeners() {\r\n    // .card__like-button\r\n    this._cardElement\r\n      .querySelector(\".card__like-button\")\r\n      .addEventListener(\"click\", () => {\r\n        this._handleLikeIcon();\r\n      });\r\n\r\n    // .card__delete-button\r\n    this._cardElement\r\n      .querySelector(\".card__delete-button\")\r\n      .addEventListener(\"click\", () => {\r\n        this._handleDeleteCard();\r\n      });\r\n\r\n    // handle image click\r\n\r\n    this._cardImageElement.addEventListener(\"click\", () => {\r\n      this._handleImageClick({ name: this._name, link: this._link });\r\n    });\r\n  }\r\n\r\n  _handleLikeIcon() {\r\n    this._cardElement\r\n      .querySelector(\".card__like-button\")\r\n      .classList.toggle(\"card__like-button_active\");\r\n  }\r\n\r\n  _handleDeleteCard() {\r\n    this._cardElement.remove();\r\n    this._cardElement = null;\r\n  }\r\n}\r\n","const initialCards = [\r\n  {\r\n    name: \"Yosemite Valley\",\r\n    link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg\",\r\n  },\r\n  {\r\n    name: \"Lake Louise\",\r\n    link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg\",\r\n  },\r\n  {\r\n    name: \"Bald Mountains\",\r\n    link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg\",\r\n  },\r\n  {\r\n    name: \"Latemar\",\r\n    link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg\",\r\n  },\r\n  {\r\n    name: \"Vanoise National Park\",\r\n    link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg\",\r\n  },\r\n  {\r\n    name: \"Lago di Braies\",\r\n    link: \"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg\",\r\n  },\r\n];\r\n\r\n// Selectors \\\\\r\n\r\nconst config = {\r\n  formSelector: \".modal__form\",\r\n  inputSelector: \".modal__input\",\r\n  submitButtonSelector: \".modal__submit\",\r\n  inactiveButtonClass: \"modal__submit_disabled\",\r\n  inputErrorClass: \"modal__input_type_error\",\r\n  errorClass: \"modal__error_visible\",\r\n};\r\n\r\nconst selectors = {\r\n  cardSection: \".cards__list\",\r\n  cardTemplate: \".card-template\",\r\n};\r\n\r\n// DomElements \\\\\r\n\r\nconst profileAddEditButton = document.querySelector(\"#profile-edit-button\");\r\nconst profileEditModal = document.querySelector(\"#profile-edit-modal\");\r\nconst profileCloseModalButton = document.querySelector(\r\n  \"#profile-close-modal-button\"\r\n);\r\nconst addCardForm = document.querySelector(\"#add-card-form\");\r\n\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileTitleInput = document.querySelector(\"#profile-title-input\");\r\nconst profileDescriptionInput = document.querySelector(\r\n  \"#profile-description-input\"\r\n);\r\nconst profileEditForm = profileEditModal.querySelector(\".modal__form\");\r\n\r\nconst addNewCardButton = document.querySelector(\".profile__add-button\");\r\nconst cardAddModal = document.querySelector(\"#card-add-modal\");\r\nconst addCardFormElement = cardAddModal.querySelector(\".modal__form\");\r\nconst popupImageModal = document.querySelector(\"#popup-image\");\r\n\r\nconst modalImageElement = document.querySelector(\".modal__image\");\r\nconst popupImageCaption = document.querySelector(\".modal__caption\");\r\nconst cardTitleInput = addCardFormElement.querySelector(\r\n  \".modal__input_type_title\"\r\n);\r\nconst cardLinkInput = addCardFormElement.querySelector(\r\n  \".modal__input_type_link\"\r\n);\r\n\r\nconst domElements = {\r\n  profileAddEditButton,\r\n  profileEditModal,\r\n  profileCloseModalButton,\r\n  profileTitle,\r\n  profileDescription,\r\n  profileTitleInput,\r\n  profileDescriptionInput,\r\n  profileEditForm,\r\n  addNewCardButton,\r\n  cardAddModal,\r\n  addCardFormElement,\r\n  popupImageModal,\r\n  modalImageElement,\r\n  popupImageCaption,\r\n  addCardForm,\r\n  cardTitleInput,\r\n  cardLinkInput,\r\n};\r\n\r\nconst infoSelector = {\r\n  profileTitle: domElements.profileTitle,\r\n  profileDescription: domElements.profileDescription,\r\n  profileTitleInput: domElements.profileTitleInput,\r\n  profileDescriptionInput: domElements.profileDescriptionInput,\r\n};\r\n\r\nwindow.domElements = domElements;\r\n\r\n// Exports \\\\\r\n\r\nexport default {\r\n  initialCards,\r\n  config,\r\n  selectors,\r\n  domElements,\r\n  infoSelector,\r\n};\r\n","export default class FormValidator {\r\n  constructor(config, formElement) {\r\n    this._inputSelector = config.inputSelector;\r\n    this._submitButtonSelector = config.submitButtonSelector;\r\n    this._inactiveButtonClass = config.inactiveButtonClass;\r\n    this._inputErrorClass = config.inputErrorClass;\r\n    this._errorClass = config.errorClass;\r\n\r\n    this._formElement = formElement;\r\n  }\r\n\r\n  _showInputError(inputElement) {\r\n    const errorMessageEl = this._formElement.querySelector(\r\n      `#${inputElement.id}-error`\r\n    );\r\n    inputElement.classList.add(this._inputErrorClass);\r\n    errorMessageEl.textContent = inputElement.validationMessage;\r\n    errorMessageEl.classList.add(this._errorClass);\r\n  }\r\n\r\n  _hideInputError(inputElement) {\r\n    const errorMessageEl = this._formElement.querySelector(\r\n      `#${inputElement.id}-error`\r\n    );\r\n    inputElement.classList.remove(this._inputErrorClass);\r\n    errorMessageEl.classList.remove(this._errorClass);\r\n    errorMessageEl.textContent = \"\";\r\n  }\r\n\r\n  _checkInputValidity(inputElement) {\r\n    if (!inputElement.validity.valid) {\r\n      this._showInputError(inputElement);\r\n    } else {\r\n      this._hideInputError(inputElement);\r\n    }\r\n  }\r\n\r\n  _toggleButtonState(inputList) {\r\n    const submitButton = this._formElement.querySelector(\r\n      this._submitButtonSelector\r\n    );\r\n\r\n    if (this._hasInvalidInput(inputList)) {\r\n      this.disableButton();\r\n    } else {\r\n      submitButton.classList.remove(this._inactiveButtonClass);\r\n      submitButton.disabled = false;\r\n    }\r\n  }\r\n\r\n  _hasInvalidInput(inputList) {\r\n    return !inputList.every((inputElement) => inputElement.validity.valid);\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._inputEls = [\r\n      ...this._formElement.querySelectorAll(this._inputSelector),\r\n    ];\r\n\r\n    this._inputEls.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", () => {\r\n        this._checkInputValidity(inputElement);\r\n        this._toggleButtonState(this._inputEls);\r\n      });\r\n    });\r\n  }\r\n\r\n  disableButton() {\r\n    const submitButton = this._formElement.querySelector(\r\n      this._submitButtonSelector\r\n    );\r\n    this._formElement.addEventListener(\"submit\", () => {\r\n      submitButton.classList.add(this._inactiveButtonClass);\r\n      submitButton.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableValidation() {\r\n    this._formElement.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n\r\n    this._setEventListeners();\r\n  }\r\n\r\n  resetValidation() {\r\n    this._inputEls.forEach((inputElement) => {\r\n      this._hideInputError(inputElement); // Clear all error messages\r\n      inputElement.value = \"\"; // Clear input fields\r\n    });\r\n\r\n    // Reset button state\r\n    this.disableButton();\r\n  }\r\n}\r\n","export default class Popup {\r\n  constructor({ popupSelector }) {\r\n    this.popupElement = document.querySelector(popupSelector);\r\n    this._handleEscClose = this._handleEscClose.bind(this);\r\n    this._handleOverlayClick = this._handleOverlayClick.bind(this);\r\n    this._handleCloseClick = () => this.close();\r\n  }\r\n\r\n  setEventListeners() {\r\n    this.popupElement\r\n      .querySelector(\".modal__close\")\r\n      .addEventListener(\"click\", this._handleCloseClick);\r\n  }\r\n\r\n  open() {\r\n    this.popupElement.classList.add(\"modal_opened\");\r\n\r\n    document.addEventListener(\"keydown\", this._handleEscClose);\r\n    document.addEventListener(\"click\", this._handleOverlayClick);\r\n  }\r\n\r\n  close() {\r\n    this.popupElement.classList.remove(\"modal_opened\");\r\n\r\n    document.removeEventListener(\"keydown\", this._handleEscClose);\r\n    document.removeEventListener(\"click\", this._handleOverlayClick);\r\n  }\r\n\r\n  _handleEscClose(e) {\r\n    if (e.key === \"Escape\") {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  _handleOverlayClick(e) {\r\n    if (e.target.classList.contains(\"modal_opened\")) {\r\n      this.close();\r\n    }\r\n  }\r\n}\r\n","import Popup from \"./Popup.js\";\r\n\r\nexport default class PopupWithForm extends Popup {\r\n  constructor({ popupSelector }, handleFormSubmit) {\r\n    super({ popupSelector });\r\n    this._handleFormSubmit = handleFormSubmit;\r\n\r\n    this._form = this.popupElement.querySelector(\".modal__form\");\r\n\r\n    this._getInputValues = this._getInputValues.bind(this);\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    /* this.popupElement.addEventListener(\"submit\", (evt) => {\r\n      evt.preventDefault();\r\n      this._handleFormSubmit(this._getInputValues());\r\n    }); */\r\n  }\r\n\r\n  _getInputValues() {\r\n    const inputList = Array.from(\r\n      this.popupElement.querySelectorAll(\".modal__input\")\r\n    );\r\n\r\n    const data = {};\r\n    inputList.forEach((input) => {\r\n      data[input.name] = input.value;\r\n    });\r\n\r\n    return data;\r\n  }\r\n}\r\n","import Card from \"../components/Card.js\";\r\nimport constants from \"../utils/constants.js\";\r\nimport FormValidator from \"../components/FormValidator.js\";\r\nimport UserInfo from \"../components/UserInfo.js\";\r\nimport Section from \"../components/Section.js\";\r\nimport PopupWithImage from \"../components/PopupWithImage.js\";\r\nimport PopupWithForm from \"../components/PopupWithForm.js\";\r\nimport Api from \"../components/Api.js\";\r\nimport \"./index.css\";\r\n\r\nconst { domElements, initialCards, selectors, config } = constants;\r\n\r\n/*-----------------------------------------------------------------*/\r\n/*                          Instances                              */\r\n/*-----------------------------------------------------------------*/\r\n\r\nconst cardSection = new Section(\r\n  {\r\n    items: initialCards,\r\n    renderer: (item) => {\r\n      const cardEl = generateCard(item);\r\n      cardSection.addItem(cardEl);\r\n    },\r\n  },\r\n  selectors.cardSection,\r\n  domElements,\r\n  generateCard\r\n);\r\n\r\nconst addFormValidator = new FormValidator(\r\n  config,\r\n  domElements.addCardFormElement\r\n);\r\n\r\nconst editFormValidator = new FormValidator(\r\n  config,\r\n  domElements.profileEditForm\r\n);\r\n\r\nconst imagePopup = new PopupWithImage(\r\n  { popupSelector: \"#popup-image\" },\r\n  domElements\r\n);\r\n\r\nconst newCardPopup = new PopupWithForm(\r\n  {\r\n    popupSelector: \"#card-add-modal\",\r\n  },\r\n  handleAddCardSubmit,\r\n  domElements,\r\n  config\r\n);\r\n\r\nconst editProfilePopup = new PopupWithForm(\r\n  {\r\n    popupSelector: \"#profile-edit-modal\",\r\n  },\r\n  ({ name, description }) => {\r\n    userInfo.setUserInfo(name, description);\r\n    editProfilePopup.close();\r\n  },\r\n  domElements,\r\n  config\r\n);\r\n\r\nconst userInfo = new UserInfo(\".profile__title\", \".profile__description\");\r\n\r\n/*-----------------------------------------------------------------*/\r\naddFormValidator.enableValidation();\r\n\r\neditFormValidator.enableValidation();\r\n\r\nconst handleImageClick = ({ name, link }) => {\r\n  imagePopup.open({ name, link });\r\n};\r\n\r\ncardSection.renderItems();\r\n\r\n/*---------------------------------------------------------------------*/\r\n/*                           Event Handler                             */\r\n/*---------------------------------------------------------------------*/\r\n\r\nexport function generateCard(cardsData) {\r\n  const card = new Card(\r\n    cardsData,\r\n    \"#card-template\",\r\n    handleImageClick,\r\n    domElements\r\n  );\r\n\r\n  return card.getView();\r\n}\r\n\r\nfunction handleAddCardSubmit({ name, description }) {\r\n  const newCardInfo = {\r\n    name: name,\r\n    link: description,\r\n  };\r\n\r\n  const cardElement = generateCard(newCardInfo);\r\n  cardSection.addItem(cardElement);\r\n\r\n  newCardPopup.close();\r\n\r\n  setTimeout(() => {\r\n    domElements.addCardFormElement.reset();\r\n  }, 1);\r\n}\r\n\r\n/*---------------------------------------------------------------------*/\r\n/*                          Event Listeners                            */\r\n/*---------------------------------------------------------------------*/\r\n\r\n/* add profile edit button */\r\n\r\ndomElements.profileAddEditButton.addEventListener(\"click\", () => {\r\n  const userData = userInfo.getUserInfo();\r\n\r\n  domElements.profileTitleInput.value = userData.title;\r\n  domElements.profileDescriptionInput.value = userData.description;\r\n\r\n  editProfilePopup.open();\r\n});\r\n\r\n/* add new card button */\r\n\r\ndomElements.addNewCardButton.addEventListener(\"click\", () => {\r\n  newCardPopup.open();\r\n});\r\n\r\n/* SETEVENTLISTENERS */\r\n\r\nnewCardPopup.setEventListeners();\r\neditProfilePopup.setEventListeners();\r\nimagePopup.setEventListeners();\r\n\r\n/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://around-api.en.tripleten-services.com/v1\",\r\n  headers: {\r\n    authorization: \"7475a3c0-00b4-4b01-93e9-2c093b2534fb\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n///\r\n\r\napi\r\n  .getApiUserInfo()\r\n  .then((user) => {\r\n    console.log(\"User info fetched:\", user);\r\n\r\n    // Update the page with the user information\r\n    document.querySelector(\".profile__title\").textContent = user.name;\r\n    document.querySelector(\".profile__description\").textContent = user.about;\r\n    document.querySelector(\".profile__image\").src = user.avatar;\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Failed to load user info:\", err);\r\n  });\r\n///\r\n\r\napi\r\n  .getApiInitialCards()\r\n  .then((result) => {\r\n    console.log(\"Cards fetched successfully:\", result);\r\n\r\n    // Process the result\r\n    result.forEach((card) => {\r\n      console.log(`Card ID: ${card._id}, Name: ${card.name}`);\r\n      // Add additional processing logic for each card if needed\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Error Found:\", err); // Log the error to the console\r\n  });\r\n////\r\n\r\ndomElements.profileEditForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault(); // Prevent default form submission\r\n\r\n  const updatedData = {\r\n    name: domElements.profileTitleInput.value,\r\n    about: domElements.profileDescriptionInput.value,\r\n  };\r\n\r\n  // Call the updateProfile API method\r\n  api\r\n    .addApiUserInfo(updatedData)\r\n    .then((updatedUser) => {\r\n      console.log(\"Profile updated successfully:\", updatedUser);\r\n\r\n      // Update the profile on the page with the new data\r\n      document.querySelector(\".profile__title\").textContent = updatedUser.name;\r\n      document.querySelector(\".profile__description\").textContent =\r\n        updatedUser.about;\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error updating profile:\", err);\r\n    });\r\n});\r\n","export default class Section {\r\n  constructor({ items, renderer }, selector, domElements, generateCard) {\r\n    this._items = items; // Array of data items\r\n    this._renderer = renderer; // Function to render a single item\r\n    this._container = document.querySelector(selector); // Container for cards\r\n    this.domElements = domElements;\r\n    this.generateCard = generateCard;\r\n  }\r\n\r\n  // Method to render all items on initial load\r\n  renderItems() {\r\n    this._items.forEach((item) => {\r\n      this._renderer(item);\r\n    });\r\n  }\r\n\r\n  // Method to add a single item to the container\r\n  addItem(element) {\r\n    this._container.prepend(element);\r\n  }\r\n}\r\n","import Popup from \"./Popup.js\";\r\n\r\nexport default class PopupWithImage extends Popup {\r\n  constructor({ popupSelector }, domElements) {\r\n    super({ popupSelector });\r\n\r\n    this._domElements = domElements;\r\n  }\r\n\r\n  open({ name, link }) {\r\n    const imageElement = this._domElements.modalImageElement;\r\n    const captionElement = this._domElements.popupImageCaption;\r\n\r\n    imageElement.src = link;\r\n    imageElement.alt = name;\r\n    captionElement.textContent = name;\r\n\r\n    super.open();\r\n  }\r\n}\r\n","export default class UserInfo {\r\n  constructor(nameSelector, jobSelector) {\r\n    this._nameElement = document.querySelector(nameSelector);\r\n    this._jobElement = document.querySelector(jobSelector);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return {\r\n      title: this._nameElement.textContent,\r\n      description: this._jobElement.textContent,\r\n    };\r\n  }\r\n\r\n  setUserInfo(name, description) {\r\n    this._nameElement.textContent = name;\r\n    this._jobElement.textContent = description;\r\n  }\r\n}\r\n","export default class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this.baseUrl = baseUrl;\r\n    this.headers = headers;\r\n\r\n    this._handleResponse = this._handleResponse.bind(this);\r\n  }\r\n\r\n  getApiInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: this.headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  getApiUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this.headers,\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addApiNewCard(data) {\r\n    fetch(`${this.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  addApiUserInfo(data) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._handleResponse);\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (res.ok) return res.json();\r\n    return Promise.reject(`Error: ${res.status}`);\r\n  }\r\n\r\n  // other methods for working with the API\r\n}\r\n"],"names":["Card","constructor","_ref","cardSelector","handleImageClick","domElements","name","link","this","_name","_link","_cardSelector","_handleImageClick","getView","templateElement","document","querySelector","_cardElement","content","cloneNode","_cardImageElement","_cardTitleEl","src","alt","textContent","_setEventListeners","addEventListener","_handleLikeIcon","_handleDeleteCard","classList","toggle","remove","profileAddEditButton","profileEditModal","profileCloseModalButton","addCardForm","profileTitle","profileDescription","profileTitleInput","profileDescriptionInput","profileEditForm","addNewCardButton","cardAddModal","addCardFormElement","popupImageModal","modalImageElement","popupImageCaption","cardTitleInput","cardLinkInput","infoSelector","window","initialCards","config","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","selectors","cardSection","cardTemplate","FormValidator","formElement","_inputSelector","_submitButtonSelector","_inactiveButtonClass","_inputErrorClass","_errorClass","_formElement","_showInputError","inputElement","errorMessageEl","id","add","validationMessage","_hideInputError","_checkInputValidity","validity","valid","_toggleButtonState","inputList","submitButton","_hasInvalidInput","disableButton","disabled","every","_inputEls","querySelectorAll","forEach","enableValidation","e","preventDefault","resetValidation","value","Popup","popupSelector","popupElement","_handleEscClose","bind","_handleOverlayClick","_handleCloseClick","close","setEventListeners","open","removeEventListener","key","target","contains","PopupWithForm","handleFormSubmit","super","_handleFormSubmit","_form","_getInputValues","Array","from","data","input","constants","selector","generateCard","items","renderer","_items","_renderer","_container","renderItems","item","addItem","element","prepend","cardEl","addFormValidator","editFormValidator","imagePopup","_domElements","_ref2","imageElement","captionElement","newCardPopup","_ref3","description","cardElement","setTimeout","reset","editProfilePopup","userInfo","setUserInfo","nameSelector","jobSelector","_nameElement","_jobElement","getUserInfo","title","cardsData","userData","api","baseUrl","headers","_handleResponse","getApiInitialCards","fetch","method","then","getApiUserInfo","addApiNewCard","body","JSON","stringify","addApiUserInfo","res","ok","json","Promise","reject","status","authorization","user","console","log","about","avatar","catch","err","error","result","card","_id","event","updatedData","updatedUser"],"sourceRoot":""}