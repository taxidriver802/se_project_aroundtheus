!function(){"use strict";class e{constructor(e,t,o){let{name:n,link:s}=e;this._name=n,this._link=s,this._cardSelector=t,this._handleImageClick=o}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButtonState(e){const t=this._formElement.querySelector(this._submitButtonSelector);this._hasInvalidInput(e)?this.disableButton():(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls)}))}))}disableButton(){const e=this._formElement.querySelector(this._submitButtonSelector);e.classList.add(this._inactiveButtonClass),e.disabled=!0}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e),e.value=""})),this.disableButton()}}class o{constructor(e,t,o,n){let{popupSelector:s}=e;this.popupElement=s,this._handleOverlay=t,this._removeListeners=o,this._editProfilePopup=n,this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlayClick=this._handleOverlayClick.bind(this)}setEventListeners(){document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._handleOverlayClick)}open(){this.popupElement.classList.add("modal_opened"),this.setEventListeners()}close(){this.popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._handleOverlayClick)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClick(e){this._handleOverlay(e)}}class n extends o{constructor(e,t,o){let{popupSelector:n}=e;super({popupSelector:n},t,o),this._popupForm=document.querySelector(".js-modal-form")}close(){this._popupForm&&this._popupForm.reset(),super.close()}}const s=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),r=document.querySelector("#profile-close-modal-button"),l=document.querySelector(".profile__title"),a=document.querySelector(".profile__description"),c=document.querySelector("#profile-title-input"),u=document.querySelector("#profile-description-input"),p=i.querySelector(".modal__form"),d=document.querySelector(".profile__add-button"),_=document.querySelector("#card-add-modal"),m=document.querySelector("#card-close-modal"),h=document.querySelector("#add-card-form"),E=_.querySelector(".modal__form"),f=E.querySelector(".modal__input_type_title"),S=E.querySelector(".modal__input_type_link"),v=document.querySelector("#popup-image"),y=document.querySelector(".cards__list"),k=document.querySelector(".modal__image"),L=document.querySelector(".modal__caption"),C={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},g=new t(C,E);g.enableValidation(),new t(C,p).enableValidation();const q=()=>{document.removeEventListener("click",T)},I=new class extends o{constructor(e,t,o){let{popupSelector:n}=e;super({popupSelector:n},t,o),this._popupSelector=n,this._handleOverlay=t}open(e){this._popupSelector.src,this._popupSelector.alt,this._popupSelector.alt,super.open(this._popupSelector)}}({popupSelector:v},T,q),b=new n({popupSelector:_},T,q),w=new n({popupSelector:i},T,q),B={profileTitle:l,profileDescription:a,profileTitleInput:c,profileDescriptionInput:u},j=[I,b,w],x=new class extends n{constructor(e,t,o,n){super(e),this._infoSelector=e,this._setUserInfo=t,this._editProfilePopup=o,this._popupInstances=n}getUserInfo(){return this._infoSelector.profileTitleInput.value=this._infoSelector.profileTitle.textContent,this._infoSelector.profileDescriptionInput.value=this._infoSelector.profileDescription.textContent,{title:this._infoSelector.profileTitle.textContent,description:this._infoSelector.profileDescription.textContent}}setUserInfo(e){e.preventDefault(),this._infoSelector.profileTitle.textContent=this._infoSelector.profileTitleInput.value,this._infoSelector.profileDescription.textContent=this._infoSelector.profileDescriptionInput.value,this._popupInstances.forEach((e=>{e.popupElement.classList.contains("modal_opened")&&e.close()}))}}(B,(()=>{}),w,j),D=e=>{let{name:t,link:o}=e;k.src=o,k.alt=t,L.textContent=t,setTimeout((()=>{I.open()}),10)};function T(e){j.forEach((t=>{const o=t.popupElement,n=o.querySelector(".js-modal-container");o.classList.contains("modal_opened")&&(n.contains(e.target)?e.stopPropagation():t.close())}))}function V(t){const o=function(t){return new e(t,"#card-template",D,T).getView()}(t);y.prepend(o)}[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}].forEach((e=>{V(e)})),s.addEventListener("click",(()=>{setTimeout((()=>{x.getUserInfo(),w.open()}),10)})),r.addEventListener("click",(()=>{w.close(i)})),p.addEventListener("submit",(function(e){x.setUserInfo(e)})),h.addEventListener("submit",(function(e){e.preventDefault(),V({name:f.value,link:S.value}),f.value="",S.value="",g.disableButton(),b.close(_)})),d.addEventListener("click",(()=>{setTimeout((()=>{b.open()}),10)})),m.addEventListener("click",(()=>b.close(_)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,